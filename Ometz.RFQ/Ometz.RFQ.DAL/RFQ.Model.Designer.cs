//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RFQModel", "FK_Address_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Company), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.Address), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_Company_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Category), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.Company), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_Company_CompanyType", "CompanyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.CompanyType), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.Company), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_Quote_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Company), "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.Quote), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteParticipant_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Company), "QuoteParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteParticipant), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteWinner_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Company), "QuoteWinner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteWinner), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_User_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.User), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteBid_Quote", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Quote), "QuoteBid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteBid), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteDetail_Quote", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Quote), "QuoteDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteDetail), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteParticipant_Quote", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Quote), "QuoteParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteParticipant), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteWinner_Quote", "Quote", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.Quote), "QuoteWinner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteWinner), true)]
[assembly: EdmRelationshipAttribute("RFQModel", "FK_QuoteBid_QuoteParticipant", "QuoteParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.RFQ.DAL.QuoteParticipant), "QuoteBid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.RFQ.DAL.QuoteBid), true)]

#endregion

namespace Ometz.RFQ.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RFQEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RFQEntities object using the connection string found in the 'RFQEntities' section of the application configuration file.
        /// </summary>
        public RFQEntities() : base("name=RFQEntities", "RFQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RFQEntities object.
        /// </summary>
        public RFQEntities(string connectionString) : base(connectionString, "RFQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RFQEntities object.
        /// </summary>
        public RFQEntities(EntityConnection connection) : base(connection, "RFQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyType> CompanyTypes
        {
            get
            {
                if ((_CompanyTypes == null))
                {
                    _CompanyTypes = base.CreateObjectSet<CompanyType>("CompanyTypes");
                }
                return _CompanyTypes;
            }
        }
        private ObjectSet<CompanyType> _CompanyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quote> Quotes
        {
            get
            {
                if ((_Quotes == null))
                {
                    _Quotes = base.CreateObjectSet<Quote>("Quotes");
                }
                return _Quotes;
            }
        }
        private ObjectSet<Quote> _Quotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuoteBid> QuoteBids
        {
            get
            {
                if ((_QuoteBids == null))
                {
                    _QuoteBids = base.CreateObjectSet<QuoteBid>("QuoteBids");
                }
                return _QuoteBids;
            }
        }
        private ObjectSet<QuoteBid> _QuoteBids;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuoteDetail> QuoteDetails
        {
            get
            {
                if ((_QuoteDetails == null))
                {
                    _QuoteDetails = base.CreateObjectSet<QuoteDetail>("QuoteDetails");
                }
                return _QuoteDetails;
            }
        }
        private ObjectSet<QuoteDetail> _QuoteDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuoteParticipant> QuoteParticipants
        {
            get
            {
                if ((_QuoteParticipants == null))
                {
                    _QuoteParticipants = base.CreateObjectSet<QuoteParticipant>("QuoteParticipants");
                }
                return _QuoteParticipants;
            }
        }
        private ObjectSet<QuoteParticipant> _QuoteParticipants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuoteWinner> QuoteWinners
        {
            get
            {
                if ((_QuoteWinners == null))
                {
                    _QuoteWinners = base.CreateObjectSet<QuoteWinner>("QuoteWinners");
                }
                return _QuoteWinners;
            }
        }
        private ObjectSet<QuoteWinner> _QuoteWinners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTypes(CompanyType companyType)
        {
            base.AddObject("CompanyTypes", companyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuotes(Quote quote)
        {
            base.AddObject("Quotes", quote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteBids EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteBids(QuoteBid quoteBid)
        {
            base.AddObject("QuoteBids", quoteBid);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteDetails(QuoteDetail quoteDetail)
        {
            base.AddObject("QuoteDetails", quoteDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteParticipants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteParticipants(QuoteParticipant quoteParticipant)
        {
            base.AddObject("QuoteParticipants", quoteParticipant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteWinners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteWinners(QuoteWinner quoteWinner)
        {
            base.AddObject("QuoteWinners", quoteWinner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.Int32 companyID, global::System.String address1, global::System.String city, global::System.String state, global::System.String postalCode, global::System.String country, global::System.String phone, global::System.String email)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.CompanyID = companyID;
            address.Address1 = address1;
            address.City = city;
            address.State = state;
            address.PostalCode = postalCode;
            address.Country = country;
            address.Phone = phone;
            address.Email = email;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Address_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Address_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Address_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Address_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RFQModel.FK_Address_Company", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String type)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Type = type;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Company_Category", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("RFQModel.FK_Company_Category", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("RFQModel.FK_Company_Category", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="companyTypeID">Initial value of the CompanyTypeID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String name, global::System.Int32 companyTypeID, global::System.Int32 categoryID)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.Name = name;
            company.CompanyTypeID = companyTypeID;
            company.CategoryID = categoryID;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                OnCompanyTypeIDChanging(value);
                ReportPropertyChanging("CompanyTypeID");
                _CompanyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyTypeID");
                OnCompanyTypeIDChanged();
            }
        }
        private global::System.Int32 _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.Int32 value);
        partial void OnCompanyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Address_Company", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("RFQModel.FK_Address_Company", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("RFQModel.FK_Address_Company", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Company_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RFQModel.FK_Company_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RFQModel.FK_Company_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("RFQModel.FK_Company_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("RFQModel.FK_Company_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Company_CompanyType", "CompanyType")]
        public CompanyType CompanyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("RFQModel.FK_Company_CompanyType", "CompanyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("RFQModel.FK_Company_CompanyType", "CompanyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyType> CompanyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("RFQModel.FK_Company_CompanyType", "CompanyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyType>("RFQModel.FK_Company_CompanyType", "CompanyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Quote_Company", "Quote")]
        public EntityCollection<Quote> Quotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("RFQModel.FK_Quote_Company", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("RFQModel.FK_Quote_Company", "Quote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteParticipant_Company", "QuoteParticipant")]
        public EntityCollection<QuoteParticipant> QuoteParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteParticipant>("RFQModel.FK_QuoteParticipant_Company", "QuoteParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteParticipant>("RFQModel.FK_QuoteParticipant_Company", "QuoteParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteWinner_Company", "QuoteWinner")]
        public EntityCollection<QuoteWinner> QuoteWinners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteWinner>("RFQModel.FK_QuoteWinner_Company", "QuoteWinner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteWinner>("RFQModel.FK_QuoteWinner_Company", "QuoteWinner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_User_Company", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("RFQModel.FK_User_Company", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("RFQModel.FK_User_Company", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="CompanyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyType object.
        /// </summary>
        /// <param name="companyTypeID">Initial value of the CompanyTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static CompanyType CreateCompanyType(global::System.Int32 companyTypeID, global::System.String type)
        {
            CompanyType companyType = new CompanyType();
            companyType.CompanyTypeID = companyTypeID;
            companyType.Type = type;
            return companyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                if (_CompanyTypeID != value)
                {
                    OnCompanyTypeIDChanging(value);
                    ReportPropertyChanging("CompanyTypeID");
                    _CompanyTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyTypeID");
                    OnCompanyTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.Int32 value);
        partial void OnCompanyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Company_CompanyType", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("RFQModel.FK_Company_CompanyType", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("RFQModel.FK_Company_CompanyType", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="Quote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quote object.
        /// </summary>
        /// <param name="quoteID">Initial value of the QuoteID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Quote CreateQuote(global::System.Int32 quoteID, global::System.Int32 companyID, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Quote quote = new Quote();
            quote.QuoteID = quoteID;
            quote.CompanyID = companyID;
            quote.StartDate = startDate;
            quote.EndDate = endDate;
            return quote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteID
        {
            get
            {
                return _QuoteID;
            }
            set
            {
                if (_QuoteID != value)
                {
                    OnQuoteIDChanging(value);
                    ReportPropertyChanging("QuoteID");
                    _QuoteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteID");
                    OnQuoteIDChanged();
                }
            }
        }
        private global::System.Int32 _QuoteID;
        partial void OnQuoteIDChanging(global::System.Int32 value);
        partial void OnQuoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_Quote_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Quote_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Quote_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_Quote_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RFQModel.FK_Quote_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteBid_Quote", "QuoteBid")]
        public EntityCollection<QuoteBid> QuoteBids
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteBid>("RFQModel.FK_QuoteBid_Quote", "QuoteBid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteBid>("RFQModel.FK_QuoteBid_Quote", "QuoteBid", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteDetail_Quote", "QuoteDetail")]
        public EntityCollection<QuoteDetail> QuoteDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteDetail>("RFQModel.FK_QuoteDetail_Quote", "QuoteDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteDetail>("RFQModel.FK_QuoteDetail_Quote", "QuoteDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteParticipant_Quote", "QuoteParticipant")]
        public EntityCollection<QuoteParticipant> QuoteParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteParticipant>("RFQModel.FK_QuoteParticipant_Quote", "QuoteParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteParticipant>("RFQModel.FK_QuoteParticipant_Quote", "QuoteParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteWinner_Quote", "QuoteWinner")]
        public EntityCollection<QuoteWinner> QuoteWinners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteWinner>("RFQModel.FK_QuoteWinner_Quote", "QuoteWinner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteWinner>("RFQModel.FK_QuoteWinner_Quote", "QuoteWinner", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="QuoteBid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteBid : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteBid object.
        /// </summary>
        /// <param name="quoteBidID">Initial value of the QuoteBidID property.</param>
        /// <param name="quoteID">Initial value of the QuoteID property.</param>
        /// <param name="quoteParticipantID">Initial value of the QuoteParticipantID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static QuoteBid CreateQuoteBid(global::System.Int32 quoteBidID, global::System.Int32 quoteID, global::System.Int32 quoteParticipantID, global::System.Decimal amount)
        {
            QuoteBid quoteBid = new QuoteBid();
            quoteBid.QuoteBidID = quoteBidID;
            quoteBid.QuoteID = quoteID;
            quoteBid.QuoteParticipantID = quoteParticipantID;
            quoteBid.Amount = amount;
            return quoteBid;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteBidID
        {
            get
            {
                return _QuoteBidID;
            }
            set
            {
                if (_QuoteBidID != value)
                {
                    OnQuoteBidIDChanging(value);
                    ReportPropertyChanging("QuoteBidID");
                    _QuoteBidID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteBidID");
                    OnQuoteBidIDChanged();
                }
            }
        }
        private global::System.Int32 _QuoteBidID;
        partial void OnQuoteBidIDChanging(global::System.Int32 value);
        partial void OnQuoteBidIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteID
        {
            get
            {
                return _QuoteID;
            }
            set
            {
                OnQuoteIDChanging(value);
                ReportPropertyChanging("QuoteID");
                _QuoteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteID");
                OnQuoteIDChanged();
            }
        }
        private global::System.Int32 _QuoteID;
        partial void OnQuoteIDChanging(global::System.Int32 value);
        partial void OnQuoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteParticipantID
        {
            get
            {
                return _QuoteParticipantID;
            }
            set
            {
                OnQuoteParticipantIDChanging(value);
                ReportPropertyChanging("QuoteParticipantID");
                _QuoteParticipantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteParticipantID");
                OnQuoteParticipantIDChanged();
            }
        }
        private global::System.Int32 _QuoteParticipantID;
        partial void OnQuoteParticipantIDChanging(global::System.Int32 value);
        partial void OnQuoteParticipantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteBid_Quote", "Quote")]
        public Quote Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteBid_Quote", "Quote").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteBid_Quote", "Quote").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quote> QuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteBid_Quote", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quote>("RFQModel.FK_QuoteBid_Quote", "Quote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteBid_QuoteParticipant", "QuoteParticipant")]
        public QuoteParticipant QuoteParticipant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuoteParticipant>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteParticipant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuoteParticipant>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteParticipant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuoteParticipant> QuoteParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuoteParticipant>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuoteParticipant>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteParticipant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="QuoteDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteDetail object.
        /// </summary>
        /// <param name="quoteDetailID">Initial value of the QuoteDetailID property.</param>
        /// <param name="quoteID">Initial value of the QuoteID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static QuoteDetail CreateQuoteDetail(global::System.Int32 quoteDetailID, global::System.Int32 quoteID, global::System.String text, global::System.Decimal value)
        {
            QuoteDetail quoteDetail = new QuoteDetail();
            quoteDetail.QuoteDetailID = quoteDetailID;
            quoteDetail.QuoteID = quoteID;
            quoteDetail.Text = text;
            quoteDetail.Value = value;
            return quoteDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteDetailID
        {
            get
            {
                return _QuoteDetailID;
            }
            set
            {
                if (_QuoteDetailID != value)
                {
                    OnQuoteDetailIDChanging(value);
                    ReportPropertyChanging("QuoteDetailID");
                    _QuoteDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteDetailID");
                    OnQuoteDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _QuoteDetailID;
        partial void OnQuoteDetailIDChanging(global::System.Int32 value);
        partial void OnQuoteDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteID
        {
            get
            {
                return _QuoteID;
            }
            set
            {
                OnQuoteIDChanging(value);
                ReportPropertyChanging("QuoteID");
                _QuoteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteID");
                OnQuoteIDChanged();
            }
        }
        private global::System.Int32 _QuoteID;
        partial void OnQuoteIDChanging(global::System.Int32 value);
        partial void OnQuoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteDetail_Quote", "Quote")]
        public Quote Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteDetail_Quote", "Quote").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteDetail_Quote", "Quote").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quote> QuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteDetail_Quote", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quote>("RFQModel.FK_QuoteDetail_Quote", "Quote", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="QuoteParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteParticipant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteParticipant object.
        /// </summary>
        /// <param name="quoteParticipantID">Initial value of the QuoteParticipantID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="quoteID">Initial value of the QuoteID property.</param>
        public static QuoteParticipant CreateQuoteParticipant(global::System.Int32 quoteParticipantID, global::System.Int32 companyID, global::System.Int32 quoteID)
        {
            QuoteParticipant quoteParticipant = new QuoteParticipant();
            quoteParticipant.QuoteParticipantID = quoteParticipantID;
            quoteParticipant.CompanyID = companyID;
            quoteParticipant.QuoteID = quoteID;
            return quoteParticipant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteParticipantID
        {
            get
            {
                return _QuoteParticipantID;
            }
            set
            {
                if (_QuoteParticipantID != value)
                {
                    OnQuoteParticipantIDChanging(value);
                    ReportPropertyChanging("QuoteParticipantID");
                    _QuoteParticipantID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteParticipantID");
                    OnQuoteParticipantIDChanged();
                }
            }
        }
        private global::System.Int32 _QuoteParticipantID;
        partial void OnQuoteParticipantIDChanging(global::System.Int32 value);
        partial void OnQuoteParticipantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteID
        {
            get
            {
                return _QuoteID;
            }
            set
            {
                OnQuoteIDChanging(value);
                ReportPropertyChanging("QuoteID");
                _QuoteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteID");
                OnQuoteIDChanged();
            }
        }
        private global::System.Int32 _QuoteID;
        partial void OnQuoteIDChanging(global::System.Int32 value);
        partial void OnQuoteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteParticipant_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteParticipant_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteParticipant_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteParticipant_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RFQModel.FK_QuoteParticipant_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteParticipant_Quote", "Quote")]
        public Quote Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteParticipant_Quote", "Quote").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteParticipant_Quote", "Quote").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quote> QuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteParticipant_Quote", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quote>("RFQModel.FK_QuoteParticipant_Quote", "Quote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteBid_QuoteParticipant", "QuoteBid")]
        public EntityCollection<QuoteBid> QuoteBids
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteBid>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteBid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteBid>("RFQModel.FK_QuoteBid_QuoteParticipant", "QuoteBid", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="QuoteWinner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteWinner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteWinner object.
        /// </summary>
        /// <param name="quoteWinnerID">Initial value of the QuoteWinnerID property.</param>
        /// <param name="quoteID">Initial value of the QuoteID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static QuoteWinner CreateQuoteWinner(global::System.Int32 quoteWinnerID, global::System.Int32 quoteID, global::System.Int32 companyID)
        {
            QuoteWinner quoteWinner = new QuoteWinner();
            quoteWinner.QuoteWinnerID = quoteWinnerID;
            quoteWinner.QuoteID = quoteID;
            quoteWinner.CompanyID = companyID;
            return quoteWinner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteWinnerID
        {
            get
            {
                return _QuoteWinnerID;
            }
            set
            {
                if (_QuoteWinnerID != value)
                {
                    OnQuoteWinnerIDChanging(value);
                    ReportPropertyChanging("QuoteWinnerID");
                    _QuoteWinnerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteWinnerID");
                    OnQuoteWinnerIDChanged();
                }
            }
        }
        private global::System.Int32 _QuoteWinnerID;
        partial void OnQuoteWinnerIDChanging(global::System.Int32 value);
        partial void OnQuoteWinnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteID
        {
            get
            {
                return _QuoteID;
            }
            set
            {
                OnQuoteIDChanging(value);
                ReportPropertyChanging("QuoteID");
                _QuoteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteID");
                OnQuoteIDChanged();
            }
        }
        private global::System.Int32 _QuoteID;
        partial void OnQuoteIDChanging(global::System.Int32 value);
        partial void OnQuoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteWinner_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteWinner_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteWinner_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_QuoteWinner_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RFQModel.FK_QuoteWinner_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_QuoteWinner_Quote", "Quote")]
        public Quote Quote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteWinner_Quote", "Quote").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteWinner_Quote", "Quote").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quote> QuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("RFQModel.FK_QuoteWinner_Quote", "Quote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quote>("RFQModel.FK_QuoteWinner_Quote", "Quote", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RFQModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String password, global::System.Int32 companyID)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.Password = password;
            user.CompanyID = companyID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RFQModel", "FK_User_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_User_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_User_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("RFQModel.FK_User_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("RFQModel.FK_User_Company", "Company", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
